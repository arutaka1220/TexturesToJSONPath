const tokens = [
    "byte",
    "short",
    "int",
    "long",
    "float",
    "double",
    "char",
    "String",
    "boolean",
    "public",
    "private",
    "protected",
    "static",
    "final",
    "void",
    "if",
    "else",
    "for",
    "while",
    "do",
    "switch",
    "case",
    "default",
    "break",
    "continue",
    "return",
    "this",
    "new",
    "class",
    "interface",
    "extends",
    "implements",
    "abstract",
    "super",
    "try",
    "catch",
    "finally",
    "throw",
    "elsewhere",
    "null",
    "undefined",
    "true",
    "false",
    "nullLiteral",
    "undefinedLiteral",
    "trueLiteral",
    "falseLiteral",
    "assignment",
    "relational",
    "equality",
    "logicalAnd",
    "logicalOr",
    "conditional",
    "shift",
    "additive",
    "multiplicative",
    "unary",
    "postfix",
    "primary",
    "array",
    "object",
    "function",
    "class",
    "interface",
    "constructor",
    "method",
    "field",
    "parameter",
    "variable",
    "statement",
    "block",
    "ifStatement",
    "elseStatement",
    "forStatement",
    "whileStatement",
    "doStatement",
    "switchStatement",
    "caseStatement",
    "defaultStatement",
    "breakStatement",
    "continueStatement",
    "returnStatement",
    "throwStatement",
    "importStatement",
    "exportStatement",
    "classDeclaration",
    "interfaceDeclaration",
    "enumDeclaration",
    "variableDeclaration",
    "methodDeclaration",
    "fieldDeclaration",
    "parameterDeclaration",
    "constructorDeclaration",
    "initializer",
    "arrayInitializer",
    "objectInitializer",
    "expressionStatement",
    "emptyStatement",
    "import"
];

/**
 * 
 * @param { String } string 
 * @returns { String }
 */
module.exports = function (string) {
    const isToken = tokens.includes(string);

    if (isToken) return string + "_";

    else return string;
}